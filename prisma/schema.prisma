generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Query {
  id         String   @id @default(cuid())
  query      String
  keyword    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  answer     String?
  references Json     @default("[]")
  pin        Boolean  @default(false)

  ownerId String? @map("owner_id")
  owner   User?   @relation(fields: [ownerId], references: [id])

  @@index([ownerId])
}

model User {
  id          String   @id @default(cuid())
  clerkUserId String   @unique @map("clerk_user_id")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  queries     Query[]
}

model Project {
  id                String   @id @default(cuid())
  name              String
  description       String
  type              String
  logo              String
  website           String
  coreContributors  String[]
  coreRepos         String[]
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Developer {
  id            String        @id @default(cuid())
  githubHandle  String        @unique @map("github_handle")
  email         String?       @unique
  web3Identities Web3Identity[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Web3Identity {
  id          String    @id @default(cuid())
  type        String
  chain       String
  address     String
  developerId String    @map("developer_id")
  developer   Developer @relation(fields: [developerId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([chain, address])
  @@index([developerId])
}
